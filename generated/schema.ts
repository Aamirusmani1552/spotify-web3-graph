// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Album extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Album entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type Album must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("Album", id.toString(), this);
    }
  }

  static load(id: string): Album | null {
    return changetype<Album | null>(store.get("Album", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get albumId(): BigInt {
    let value = this.get("albumId");
    return value!.toBigInt();
  }

  set albumId(value: BigInt) {
    this.set("albumId", Value.fromBigInt(value));
  }

  get owner(): Bytes {
    let value = this.get("owner");
    return value!.toBytes();
  }

  set owner(value: Bytes) {
    this.set("owner", Value.fromBytes(value));
  }

  get albumAddress(): Bytes {
    let value = this.get("albumAddress");
    return value!.toBytes();
  }

  set albumAddress(value: Bytes) {
    this.set("albumAddress", Value.fromBytes(value));
  }

  get songsCount(): BigInt {
    let value = this.get("songsCount");
    return value!.toBigInt();
  }

  set songsCount(value: BigInt) {
    this.set("songsCount", Value.fromBigInt(value));
  }

  get timeStamp(): BigInt {
    let value = this.get("timeStamp");
    return value!.toBigInt();
  }

  set timeStamp(value: BigInt) {
    this.set("timeStamp", Value.fromBigInt(value));
  }

  get albumName(): string {
    let value = this.get("albumName");
    return value!.toString();
  }

  set albumName(value: string) {
    this.set("albumName", Value.fromString(value));
  }
}
